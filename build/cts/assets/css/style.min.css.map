{"version":3,"sources":["a_components/20_colour/00_core/_02_configuration_colour.sass","style.min.css","a_components/10_layout/00_core/_01_configuration_layout.sass","a_components/50_animation/00_core/14_animations/_build.sass","a_components/50_animation/00_core/14_animations/_pulse.sass","c_local/00_configuration/_01_configuration_layout.sass","c_local/00_configuration/_02_configuration_colour.sass","a_components/10_layout/layout_foundation_basic/_grid.sass","a_components/10_layout/00_core/12_mixins/_responsive_inset.sass","a_components/10_layout/00_core/10_vendor/modularscale/modularscale/_function.scss","a_components/10_layout/00_core/12_mixins/_breakpoints.sass","a_components/10_layout/00_core/12_mixins/_device_width_viewport.sass","a_components/10_layout/layout_foundation_basic/_primary_content.sass","a_components/10_layout/00_core/12_mixins/_standardized_block_spacing.sass","a_components/10_layout/layout_css_variables/_set_css_variables.sass","a_components/10_layout/responsive_images/_img.sass","a_components/10_layout/standardized_top_level_primitives/_standardized_top_level_primitives.sass","a_components/10_layout/mobile_classes/_mobile.sass","a_components/20_colour/root_colour_variables/_colour_root_variables.sass","a_components/30_typography/standardized_typography/_typography.sass","c_local/00_configuration/_03_configuration_typography.sass","a_components/30_typography/00_core/12_mixins/_line_height.sass","a_components/10_layout/00_core/10_vendor/modularscale/modularscale/_pow.scss","a_components/30_typography/standardized_typography/_text_collection.sass","a_components/30_typography/00_core/12_mixins/_font_size.sass","a_components/20_colour/00_core/11_functions/_neutral.sass","a_components/30_typography/standardized_typography/_heading_collection.sass","a_components/30_typography/standardized_typography/_anchor.sass","a_components/50_animation/00_core/12_mixins/_transition.sass","a_components/50_animation/00_core/11_functions/_relative_duration.sass","a_components/30_typography/00_core/12_mixins/_underline.sass","a_components/30_typography/standardized_lists/_list_collection.sass","a_components/30_typography/body_text_anchor_1/_body_text_anchor.sass","a_components/40_ui/ui_element_base/13_definitions/_form_elements.sass","c_local/00_configuration/_04_configuration_ui.sass","a_components/40_ui/standardized_forms/_form_collection.sass","a_components/50_animation/standardized_animation/_animation_root_variables.sass","a_components/60_site_elements/figure_normalization/_figure.sass","a_components/60_site_elements/svg_symbol_support/_svg.sass","a_components/30_typography/!fluid_type/_fluid_type_component.sass","a_components/30_typography/00_core/12_mixins/_fluid_type.sass"],"names":[],"mappings":";AAOC,gBAAA;ACPD;;;;;;EAME;ACmDF,iBAAA;AFlDC,2EAAA,CGPD,iBACE,GACE,SAAU,CACZ,GACE,SAAU,CAAA,CAEd,oBACE,GACE,SAAU,CACZ,GACE,UAAY,CAAA,CAEhB,oBACE,GACE,SAAU,CACZ,GACE,UAAY,CAAA,CChBhB,iBACE,GACE,UAAY,CACZ,kBAAsB,CACxB,IACE,SAAU,CACV,oBAA0B,CAC5B,GACE,UAAY,CACZ,kBAAsB,CAAA;ACgD1B,iBAAA;AClDC,2EAAA,CCAD,aACE,YAAa,CACb,eAAgB,CAChB,UAAW,CAHb,sCCQE,sBCDgD,CDEhD,uBCFgD,CCG9C,2CHVJ,sCCYI,qBCL8C,CDM9C,sBCN8C,CDS5C,0BAA4B,CAC5B,2BAA6B,CAO7B,gBHnBY,CECgB,CANlC,sCASE,YAAa,CACb,yBAA0B,CGAxB,2CHVJ,sCAaI,mEFE6C,CED7C,sBEP8C,CFQ9C,mBER8C,CFClD,oJAUM,sBAAuB,CACvB,qBAAsB,CAX5B,oJAcM,sBAAuB,CAd7B,gJAiBM,mBAAoB,CAAG,CI7B3B,kBACE,kBAAmB,CAErB,eACE,kBAAmB,CAQrB,UACE,kBAAmB,CCTvB,uBCCE,YAAa,CACb,uBJKgD,CCG9C,2CEVJ,uBCKI,sBJE8C,CGLN,CAI5C,SCLE,YAAa,CACb,uBJKgD,CCG9C,2CEJJ,SCDI,sBJE8C,CGCN,CEL5C,MAII,qBAAiC,CAAjC,oBAAiC,CAAjC,oBAAiC,CAAjC,qBAAiC,CAAjC,sBAAiC,CAAjC,uBAAiC,CAOnC,sBAAmB,CACnB,uBAAoB,CACpB,yBAAqB,CACrB,2BAAuB,CCtBzB,IACE,cAAe,CACf,UAAW,CACX,WAAY,CACZ,cAAe,CACf,qBAAsB,CACtB,8BAA+B;ACRjC,qBAAA,CAEA,KACE,uBAAwB,CAE1B,UACE,WAAY,CAEd,KACE,SAAU,CACV,QAAS,CACT,wBVkCe,CUhCjB,iDACE,qBAAsB,CCZxB,mBACE,aAAc,CPcZ,2COfJ,mBAII,YAAa,CAAK,CAEtB,kBACE,YAAa,CHCf,MIGI,mBAA0B,CAA1B,mBAA0B,CAA1B,mBAA0B,CAA1B,mBAA0B,CAA1B,gBAA0B,CAA1B,gBAA0B,CAA1B,gBAA0B,CAA1B,gBAA0B,CAA1B,gBAA0B,CAWxB,0BAAqC,CAArC,4BAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,8BAAqC,CAArC,0BAAqC,CAArC,4BAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,8BAAqC,CAArC,0BAAqC,CAArC,4BAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,8BAAqC,CAArC,0BAAqC,CAArC,4BAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,8BAAqC,CAArC,0BAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,sBAAqC,CAArC,8BAAqC,CAArC,uBAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,sBAAqC,CAArC,2BAAqC,CAArC,uBAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,sBAAqC,CAArC,2BAAqC,CAArC,uBAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,sBAAqC,CAArC,2BAAqC,CAArC,uBAAqC,CAArC,yBAAqC,CAArC,yBAAqC,CAArC,sBAAqC,CAArC,2BAAqC,CAIzC,uBAAgB,CAChB,oBAAgB,CAChB,oBAAiB,CACjB,kBAAc,CAOZ,6BAA8C,CAA9C,6BAA8C,CAA9C,6BAA8C,CAA9C,6BAA8C,CAA9C,6BAA8C,CAA9C,6BAA8C,CAA9C,6BAA8C,CAA9C,6BAA8C,CAA9C,6BAzB0B,CFX9B,KGCE,yBCoBuB,CDnBvB,cVUgD,CUThD,abaa,CITX,wCMPJ,KGMI,cVM8C,CUSkB,CTVhE,wCMXJ,KGSI,cVG8C,CUSkB,CTNhE,2CMfJ,KGYI,cVA8C,CUSkB,CTFhE,wCMnBJ,KGeI,cVH8C,CUSkB,CTEhE,2CMvBJ,KGkBI,cVN8C,CUSkB,CTMhE,yCM3BJ,KGqBI,cVT8C,CUSkB,CHfpE,KGkBE,cCnBiB,CCDjB,eCGW,CCTb,+BCSE,cfKgD,CYRhD,eCGW,CTDX,YAAa,CACb,uBJKgD,CCG9C,2CajBJ,+BVYI,kBJE8C,CcXU,CAE5D,WACE,qBAAsB,CAExB,GACE,oBdKgD,CcHlD,GACE,4DHYkE,CGXlE,eH0BQ,CGzBR,wBAAyB,CAE3B,GACE,kBdHgD,CcIhD,aAAc,CAEhB,SACE,QAAS,CACT,SAAU,CAEZ,EACE,WAAY,CAEd,YACE,gCElBoC,CFmBpC,WAAY,CAEd,iBACE,eHmBc,CGjBhB,YACE,iBAAkB,CAEpB,IAGE,oBAAqB,CAEvB,SAJE,wBE5BoC,CF6BpC,aHAQ,CGGV,KAGE,iBAAkB,CAClB,eHPQ,CGSV,kBACE,oDHvBsD,CIjBtD,cfKgD,CYRhD,eCGW,CC2CX,aE1CoC,CF4CtC,IACE,eAAgB,CAChB,oBAAqB,CACrB,oBAAqB,CAEvB,QACE,iBAAkB,CCnDlB,mBfKgD,CcgDhD,aAAc,CACd,6BAA8B,CAEhC,IACE,cAAuC,CAEzC,IACE,iBAA2C,CAE7C,QACE,kBAAmB,CAErB,GACE,QAAS,CACT,+BElEoC,CZFpC,YAAa,CACb,uBJKgD,CCG9C,2CayDJ,GV9DI,sBJE8C,Cc+DR,CG3E1C,kBACE,QAAS,CACT,apBca,CoBbb,4DNmBkE,CMlBlE,eNiCQ,CMhCR,qBAAsB,CLQtB,aAAc,CKbhB,8BASI,apBOW,CoBNX,oBAAqB,CAEzB,SACE,UAAW,CAEb,OFRE,mBfKgD,CiBMhD,oBjBNgD,CiBQlD,cAHE,kBjBLgD,CiBQlD,OFbE,kBfKgD,CiBWhD,kBjBXgD,CiBalD,OFlBE,iBfKgD,CiBiBhD,wBAAyB,CAE3B,cAJE,kBjBfgD,CiBgBhD,eAMgB,CAHlB,OFxBE,gBE2BgB,CAElB,OAIE,iBACgB,CAElB,cFpCE,cfKgD,CiB0BhD,iBjB1BgD,CiB2BhD,eNLU,CMOV,eDjCoC,CCmCtC,OAKE,aDxCoC,CEVtC,EACE,UrBwDQ,CqBvDR,cAAe,CACf,oBAAqB,CCWrB,iCCCY,CFfd,iBGOE,yBAA0B,CCP5B,MACE,etBagD,CsBZhD,kBtBYgD,CsBVlD,YACE,iBtBSgD,CsBRhD,oBtBQgD,CuBdlD,wBACE,U1BwDQ,CwBlDR,yBAA0B,CEP5B,uFAKI,aAAmC,CCKrC,yhCACE,oBAAqB,CACrB,iB3B6CM,C2B5CN,+B3B4CM,CsB3CR,6BCCY,CICd,yOACE,YAAa,CACb,kBAAmB,CACnB,0BAA2B,CAC3B,kBAAmB,CACnB,sBAAwB,CACxB,qBAAsB,CACtB,MAAO,CACP,yBbDuB,CaEvB,gBxBXgD,CeLhD,cfKgD,CwBahD,kB5BlBU,C4BmBV,ebQU,CaPV,qBAAsB,CAGtB,wBRtBoC,CQuBpC,iBCzBoB,CD0BpB,uBAA2B,CAC3B,eAAgB,CAChB,YAAa,CLtBb,6BCCY,CIuBZ,cAAe,CAIjB,mHAEE,uBAAgB,CAAhB,eAAgB,CAGd,WCxCoB,CDyCpB,eCzCoB,CD2CxB,SACE,qBAAsB,CACtB,cAAe,CACf,gBxBvCgD,CwBwChD,eAAgB,CAGhB,wBR/CoC,CQgDpC,iBClDoB,CDmDpB,uBAA2B,CL7C3B,6BCCY,CIoEd,sHAII,WChFoB,CDiFpB,aAAc,CT/EhB,gBfKgD,CwBuF9C,iB3B5CM,C2BiDR,sBAAuB,CACvB,iBAAkB,CAClB,uBAA2B,CAC3B,cAAe,CACf,eCnFmB,CDoFnB,WCnFe,CDoFf,eCnFmB,CNfnB,6BCCY,CImGZ,kBAAmB,CAEnB,6gBACE,oBAAqB,CACrB,eAAgB,CLxGlB,iCCCY,CI0Gd,+BAEE,U3BlEQ,C2BmER,qB3BzGa,C2B0Gb,qB3BpEQ,C2BqER,sJACE,qB3B5GW,C2B6GX,a3B9GW,C2B+GX,wB3B/GW,C2BiHf,+BAEE,U3BlHa,C2BmHb,oB3B9EU,C2B+EV,oB3B/EU,C2BgFV,mIACE,wBC9F+C,CD+F/C,U3BvHW,C2BwHX,wBCjGmD,CDmGvD,kBAEE,aRrIoC,CQsIpC,qB3B7Ha,C2B8Hb,wBRvIoC,CQwIpC,yEACE,wBRzIkC,CQ0IlC,a3BlIW,C2BoIf,cAEE,U3BrIa,C2BsIb,qB3BhGQ,C2BiGR,qB3BvIa,C2BwIb,6DACE,wB3B1IW,C2B2IX,U3BpGM,C2BsGV,aAEE,aRvJoC,CQwJpC,wBAA6B,CAK3B,wBR7JkC,CQ+JpC,0DACE,U3BjHM,C2BkHN,wBAA6B,CAI3B,qB3BtHI,C2BwHV,WAEE,U3BhKa,C2BiKb,wBAA6B,CAK3B,qB3BtKW,C2BwKb,oDAII,qB3B5KS,C2B6KX,wBAA6C,CAC7C,U3B9KW,C6BgBf,8BACE,iB1BtBgD,C0BqBlD,uBAII,YAAa,CrB7BjB,MsBEE,2BAAuB,CACvB,iCAA6B,CCb/B,OACE,QACsB,CAExB,kBAFE,qB/BgBa,C+Bdf,WACE,aAAc,CAEd,eAAmB,CbEnB,cfKgD,C4BLhD,iBAAkB,CAClB,a/BQa,CgCXf,IACE,aAAc,CACd,cACa,CAHf,qCAGE,YAKe,CCHjB,YC2BM,c/BzB4C,C+B2B9C,wBD7BJ,YCkCQ,yCAA0F,CDjCb,CCmCjF,2BDpCJ,YCsCQ,gB/BpC0C,C8BDmC,CCyCjF,6FACE,aAAc,CACd,mBAAoB","file":"style.min.css","sourcesContent":["/**\n * @file\n * Colour System Configuration. A standardized approach to defining and modulating colour.\n *\n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n\n /* !COLOUR GRID\n    Define your design’s palette by choosing the main colours */\n\n$clr1: #ABABAB;\n$clr2: #EFEFEF;\n$clr3: #333333;\n$clr4: #222222;\n$clr5: #111111;\n$clr6: #000000;\n$clr7: #000000;\n$clr8: #000000;\n$clr9: #000000;\n\n// Define alternative blackpoint, whitepoint and neutrals.\n\n$black: black;\n$white: white;\n\n\n// Color map examples\n\n$clr1_map: (shade: mix($black,$clr1,20%), primary: $clr1, tint: mix($white,$clr1,10%), fade: mix($white,$clr1,50%), watermark: mix($white,$clr1,80%));\n$clr2_map: (shade: mix($black,$clr2,20%), primary: $clr2, tint: mix($white,$clr2,10%), fade: mix($white,$clr2,50%), watermark: mix($white,$clr2,80%));\n$clr3_map: (shade: mix($black,$clr3,20%), primary: $clr3, tint: mix($white,$clr3,10%), fade: mix($white,$clr3,50%), watermark: mix($white,$clr3,80%));\n$clr4_map: (shade: mix($black,$clr4,20%), primary: $clr4, tint: mix($white,$clr4,10%), fade: mix($white,$clr4,50%), watermark: mix($white,$clr4,80%));\n$clr5_map: (shade: mix($black,$clr5,20%), primary: $clr5, tint: mix($white,$clr5,10%), fade: mix($white,$clr5,50%), watermark: mix($white,$clr5,80%));\n$clr6_map: (shade: mix($black,$clr6,20%), primary: $clr6, tint: mix($white,$clr6,10%), fade: mix($white,$clr6,50%), watermark: mix($white,$clr6,80%));\n$clr7_map: (shade: mix($black,$clr7,20%), primary: $clr7, tint: mix($white,$clr7,10%), fade: mix($white,$clr7,50%), watermark: mix($white,$clr7,80%));\n$clr8_map: (shade: mix($black,$clr8,20%), primary: $clr8, tint: mix($white,$clr8,10%), fade: mix($white,$clr8,50%), watermark: mix($white,$clr8,80%));\n$clr9_map: (shade: mix($black,$clr9,20%), primary: $clr9, tint: mix($white,$clr9,10%), fade: mix($white,$clr9,50%), watermark: mix($white,$clr9,80%));\n\n\n// Neutrals\n// neutral() function mixes blackpoint and whitepoint.\n\n$lightest_neutral: neutral(5);\n$lighter_neutral: neutral(30);\n$light_neutral: neutral(40);\n$neutral: neutral();\n$mid_neutral: neutral(60);\n$dark_neutral: neutral(70);\n$darker_neutral: neutral(80);\n$darkest_neutral: neutral(90);\n\n// Background\n\n$bgcolor: $white;\n\n//Aliases\n\n$impact: red;\n$cta: blue;\n$de_emphasized: $light_neutral;\n$de_activated: $lighter_neutral;\n$link_colour: $cta;\n","/*!\n * huronia-theme v1.0.0\n * A custom Omeka theme for the Recounting Huronia project.\n * (c) 2019 Agile Humanities Agency\n * MIT License\n * https://agile.git.beanstalkapp.com/agile-theme-builder-v002.git\n */\n\n@charset \"UTF-8\";\n/* Core Styles for this application */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _components This file loads components from the b_components folder. Note that the b_components path needs to be declared as an includePath (e.g. via Gulp or config.rb) for these declarations to work. */\n/* @folder 10_layout/00_core @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file General Configuration. Copy this file to your theme configuration folder of your local theme or component and adjust its _index file to import. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* @file index.sass @component 00_general/00_core @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _logical_operators @component 00_general/00_core @description A set of static functions (e.g. functions that do not return a value) that perform logical operations on CSS variables. CSS variables must be passed AS strings, include the variable to be assigned a value and any required variables. CSS variable arguments should be set to 1 or 0 Thanks to https://css-tricks.com/logical-operations-with-css-variables/ */\n/* Strips units from a value. h/t to https://css-tricks.com/snippets/sass/strip-unit-function/ */\n/** @file _string_replace A function to replace one string with another. Thanks to https://stackoverflow.com/questions/12728634/string-replace-in-sass */\n/** @file _type_checking.sass @category 00_general @group a_components @description A suite of functions to check value type. With thanks to https://css-tricks.com/snippets/sass/advanced-type-checking/ */\n/** @file _get_asset_url.sass @category 00_general @group a_components @description A suite of functions that compose asset urls from configured values. */\n/** @file _convert_unit.sass @category 00_general @group a_components @description Converts value to chosen unit. With thanks to https://www.sitepoint.com/converting-typographic-units-sass/ */\n/* @folder 10_layout/00_core @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file Layout Configuration. Set a modular scale and standardized spacing. Define breakpoints. Copy this file to your theme configuration folder of your local theme or component and adjust its _index file to import. */\n/* !BREAKPOINTS */\n/*  Values for your responsive design breakpoints. This has now been rethought thanks to https://medium.freecodecamp.com/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862#.rduwqht4g 336px \t  21em       xsml 600px \t  37.5em     sml 900px \t  46.25      med 1200px    75em       lrg 1800px\t  100em      xlrg   */\n/* Modular scale reference double-octave    : 4 pi               : 3.14159265359 major-twelfth    : 3 major-eleventh   : 2.666666667 major-tenth      : 2.5 octave           : 2 major-seventh    : 1.875 minor-seventh    : 1.777777778 major-sixth      : 1.666666667 phi              : 1.618034 golden           : $phi minor-sixth      : 1.6 fifth            : 1.5 augmented-fourth : 1.41421 fourth           : 1.333333333 major-third      : 1.25 minor-third      : 1.2 major-second     : 1.125 minor-second     : 1.066666667       */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _relative_value.sass @category 10_layout @group a_components @description Returns a value in the standardized site scale. Uses the modular scale SASS library. See https://www.modularscale.com @args  $factor: An integer corresponding to a step on the scale. Defaults to 0. @args  $base: The base unit (e.g. 1.5rem) to be evaluated. Defaults to $blh (from 00_layout_configuration) @args  $ratio: The ratio (with a denominator of 1) denoting the distance between steps on the scale. Note: if the $factor is set to null this function will return a 0 value (as a factor of “0” is the base point on the modular scale). */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* Sets standard viewport to the device-width */\n/** @file _proportional_thumbnail.sass @category 10_layout @component 00_core @description Creates a fixed container with aspect ratio. Overflow content is hidden Proportion defaults to 1/$scale. Note: The element MUST have a defined width. Set to 'none' if the default is set elsewhere. */\n/** @file _proportional_thumbnail.sass @category 10_layout @component 00_core @description Sets a thumbnail image to a proportion of its with. Proportion defaults to 1/$scale. NOTE: The element must have an explicit $width set as per proportional_height() */\n/** @file _responsive_inset.sass @category 10_layout @group a_components @description Mixins pertaining to standardized content widths using relative values. */\n/* @file _separated_row.sass @category 10_layout @component 00_core @description  Mixin to create a rudimentary grid. $wrap and $rows are legacy parameters.  */\n/** @file Block Spacing Mixin @group 10_layout @description Sets a standardized space for stacked content blocks. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* @folder 20_colour/00_core @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file Colour System Configuration. A standardized approach to defining and modulating colour. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/* !COLOUR GRID Define your design’s palette by choosing the main colours */\n/** @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. @directory  Contains a library of SASS functions  */\n/* Retrives a derivative colour from a colour map */\n/* @file Converts HSB colours (e.g. as defined in Adobe CC or Sketch) into SASS-supported HSL colours. */\n/* Retrieves a neutral based on intensity. Higher intensities are darker. */\n/* Based on a preset neutral array. Must be a factor of 10 between 10 and 90. */\n/* Creates a neutral by mixing dark and light colours to the provided percentage. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file Typography Configuration. Used to define a standard proportion across the site as per the modularscale library. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/** @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. @directory  Contains a library of SASS functions  */\n/** @file _font_value.sass @category 20_typography @group a_components @description Function to return value based on relative value $factor, $basetypesize and $scale. */\n/* Scales typography for any screen size. h/t https://www.madebymike.com.au/writing/precise-control-responsive-typography/ @var $min_size: Minimum font size in em or rem $max_size: Maximum font size in em or rem $min_viewport_width: Sets the lower bound breakpoint to stop scaling. E.g. map-get($breakpoints,'med') $max_viewport_width: Sets the upper bound breakpoint to stop scaling. E.g. map-get($breakpoints,'xxlrg') */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* Scales typography for any screen size. h/t https://www.madebymike.com.au/writing/precise-control-responsive-typography/ and Indrek Paas https://www.sassmeister.com/gist/7f22e44ace49b5124eec @var $min_size: Minimum font size in em or rem $max_size: Maximum font size in em or rem $min_viewport_width: Sets the lower bound breakpoint to stop scaling. E.g. map-get($breakpoints,'med') */\n/** @file _font_size.sass @category 20_typography @group a_components @description Creates a font-size declaration based on relative value $factor, $basetypesize and $scale. */\n/* @file _horizontal_list.sass @category 30_typography */\n/** @file _image_bullets.sass @category 30_typography @group a_components @description Places an image to the left of an element. */\n/** @file _icons.sass @component 30_typography @group a_components @description Handy icon-related mixins. */\n/** @file _load_font.sass @description  A font loading utility based on standardized filenames. The font loader is keyed to standardized naming. Each weight of a font must have its own directory, named $basefilename-$weight. Weights should be numeric (100-900). The folder should contain any style variants of that weight, named $basefilename-$style-$weight.$extension A full array of webfonts is expected for each style (.eot, .woff, .otf, .svg, .ttf) Example: times-new-roman-400/times-new-roman-400-italic.eot Note that $styles 'normal' and 'italic' are also font-style keywords so they should not be passed as strings (i.e. in quotations). TO DO: Not happy with how this handles local names, which are specific and too idiosyncratic for an standardized treatment. */\n/* Thankyou Natalia Onischuk http://hackingui.com/front-end/a-pure-css-solution-for-multiline-text-truncation */\n/** @file _link_underline.sass @category 30_typography @component 00_Core @description  Adds an underline. Allows themes to override with by redefining it, e.g. to change from a text-underline to border-bottom approach */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file UI Configuration. A standardized approach to defining buttons and other ui elements. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/** @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file Animation Configuration. A standardized approach to site animation.  WORK IN PROGRESS. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _relative_duration.sass @category 50_animation @group a_components @description Returns a value in seconds according to the standardized site scale. Uses the modular scale SASS library. See https://www.modularscale.com @args  $factor: An integer corresponding to a step on the scale. Defaults to 0. @args  $base: A value in seconds. Defaults to the site’s $heartbeat @args  $ratio: The ratio (with a denominator of 1) denoting the distance between steps on the scale. Defaults to the site’s $scale Note: if the $factor is set to null this function will return a 0 value (as a factor of “0” is the base point on the modular scale). */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. @directory  Contains a library of mixins  */\n/* @file _standard_transition.sass @category 50_animation @group a_components @description  Creates a standard transition property based on configuration values. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n@keyframes build { from { opacity: 0; }\n  to { opacity: 1; } }\n\n@keyframes build-08 { from { opacity: 0; }\n  to { opacity: 0.8; } }\n\n@keyframes build-05 { from { opacity: 0; }\n  to { opacity: 0.5; } }\n\n@keyframes pulse { 0% { opacity: 0.5;\n    transform: scale(1, 1); }\n  50% { opacity: 1;\n    transform: scale(1.1, 1.1); }\n  100% { opacity: 0.5;\n    transform: scale(1, 1); } }\n\n/* @file _index.sass @theme Local @description  Loads SASS files for local theme. */\n/* @theme Local @folder c_local/00_configuration @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file General Configuration. Copy this file to your theme configuration folder of your local theme or component and adjust its _index file to import. */\n/** @file Layout Configuration. Set a modular scale and standardized spacing. Define breakpoints. Copy this file to your theme configuration folder of your local theme or component and adjust its _index file to import. */\n/* !BREAKPOINTS */\n/*  Values for your responsive design breakpoints. This has now been rethought thanks to https://medium.freecodecamp.com/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862#.rduwqht4g 336px \t  21em       xsml 600px \t  37.5em     sml 900px \t  46.25      med 1200px    75em       lrg 1800px\t  100em      xlrg   */\n/* Modular scale reference double-octave    : 4 pi               : 3.14159265359 major-twelfth    : 3 major-eleventh   : 2.666666667 major-tenth      : 2.5 octave           : 2 major-seventh    : 1.875 minor-seventh    : 1.777777778 major-sixth      : 1.666666667 phi              : 1.618034 golden           : $phi minor-sixth      : 1.6 fifth            : 1.5 augmented-fourth : 1.41421 fourth           : 1.333333333 major-third      : 1.25 minor-third      : 1.2 major-second     : 1.125 minor-second     : 1.066666667       */\n/** @file Colour System Configuration. A standardized approach to defining and modulating colour. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/* !COLOUR GRID Define your design’s palette by choosing the main colours */\n/** @file Typography Configuration. Used to define a standard proportion across the site as per the modularscale library. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/** @file UI Configuration. A standardized approach to defining buttons and other ui elements. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/** @file Animation Configuration. A standardized approach to site animation.  WORK IN PROGRESS. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/** @file Fluid Type Component Configuration. Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import. */\n/* @profile ah_standard_base @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _components This file loads components from the b_components folder. */\n/* @component layout_foundation_basic @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* @file _grid.sass @category 10_layout @component layout_foundation_basic @description  Establishes responsiveness for top-level sections. Requires a set DOM structure. @todo  Uses display: grid. Polyfill this for pre-grid support. */\nbody > *, .tier { margin-top: 0; margin-bottom: 0; width: 100%; }\n\nbody > *:not(.full) > *, .tier:not(.full) > * { padding-left: 0.66667rem; padding-right: 0.66667rem; }\n\n@media only screen and (min-width: 46.25em) { body > *:not(.full) > *, .tier:not(.full) > * { padding-left: 3.375rem; padding-right: 3.375rem; margin-left: auto !important; margin-right: auto !important; max-width: 1400px; } }\n\nbody > *:not(.full) > *, .tier:not(.full) > * { display: grid; grid-template-columns: 1fr; }\n\n@media only screen and (min-width: 46.25em) { body > *:not(.full) > *, .tier:not(.full) > * { grid-template-columns: [left] 16.66667% [main] 1fr [right] 33.33333%; grid-column-gap: 1.5rem; grid-row-gap: 1.5rem; }\n  body > *:not(.full) > * > div, body > *:not(.full) > * > main, body > *:not(.full) > * > article, .tier:not(.full) > * > div, .tier:not(.full) > * > main, .tier:not(.full) > * > article { grid-column-start: main; grid-column-end: right; }\n  body > *:not(.full) > * > div:first-child, body > *:not(.full) > * > article:first-child, .tier:not(.full) > * > div:first-child, .tier:not(.full) > * > article:first-child { grid-column-start: left; }\n  body > *:not(.full) > * > div:last-child, body > *:not(.full) > * > article:last-child, .tier:not(.full) > * > div:last-child, .tier:not(.full) > * > article:last-child { grid-column-end: end; } }\n\n/* @file _viewport.sass @category 10_layout @component layout_foundation_basic @description  Establishes viewport at device-width. */\n@-webkit-viewport { width: device-width; }\n\n@-moz-viewport { width: device-width; }\n\n@-ms-viewport { width: device-width; }\n\n@-o-viewport { width: device-width; }\n\n@viewport { width: device-width; }\n\n/* @file _primary_content.sass @category 10_layout @component layout_foundation_basic @description  Defines styles for the primary content section (#primary-content and main), including standardized spacing. */\n#primary-content > * > * > * { margin-top: 0; margin-bottom: 0.66667rem; }\n\n@media only screen and (min-width: 46.25em) { #primary-content > * > * > * { margin-bottom: 3.375rem; } }\n\nmain > div { margin-top: 0; margin-bottom: 0.66667rem; }\n\n@media only screen and (min-width: 46.25em) { main > div { margin-bottom: 3.375rem; } }\n\n/** @component layout_css_variables @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _set_css_variables @component layout_css_variables @file _index.sass @description  Sets breakpoints and breakpoint aliases as CSS variables, making them available to Javascript */\n:root { --breakpoint-xsml: 336; --breakpoint-sml: 480; --breakpoint-med: 740; --breakpoint-lrg: 1200; --breakpoint-xlrg: 1800; --breakpoint-xxlrg: 2080; --breakpoint-stack: 740; --breakpoint-tablet: 740; --breakpoint-desktop: 1200; --breakpoint-ultrawide: 1800; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file Vertical Breakpoint Configuration. Defines vertical breakpoints. Load _index_local_config */\n/* Vertical Breakpoints In pixels: xxshort: 400px xshort: 480px short: 640px med: 800px tall: 1024px // iPad xtall: 1200px */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\nimg { max-width: 100%; width: 100%; height: auto; border-width: 0; vertical-align: middle; -ms-interpolation-mode: bicubic; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* !BASIC STRUCTURE */\nhtml { scroll-behaviour: smooth; }\n\nhtml, body { height: 100%; }\n\nbody { padding: 0; margin: 0; background-color: #283A44; }\n\ndiv, main, aside, nav, article, section, header, footer { box-sizing: border-box; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* MOBILE */\n#mobile-header-nav { display: block; }\n\n@media only screen and (min-width: 46.25em) { #mobile-header-nav { display: none; } }\n\n#mobile-nav-block { display: none; }\n\n/* @file _index.sass @component root_colour_variables @category 20_colour @description  Handles basic animation settings. */\n/** @file colour_root_variables.sass @category 20_colour @component _root_colour_variables @description Adds CSS variables to be passed to javascript */\n:root { --colour--1: #FFC565; }\n\n:root { --colour--2: #943D21; }\n\n:root { --colour--3: #465D55; }\n\n:root { --colour--4: #78ADCC; }\n\n:root { --colour--5: #111111; }\n\n:root { --colour--6: #000000; }\n\n:root { --colour--7: #000000; }\n\n:root { --colour--8: #000000; }\n\n:root { --colour--9: #000000; }\n\n:root { --colour--1--shade: #D4A454; }\n\n:root { --colour--1--primary: #FFC565; }\n\n:root { --colour--1--tint: #FFD898; }\n\n:root { --colour--1--fade: #FFECCC; }\n\n:root { --colour--1--watermark: #FFF7E9; }\n\n:root { --colour--2--shade: #80351C; }\n\n:root { --colour--2--primary: #943D21; }\n\n:root { --colour--2--tint: #C59587; }\n\n:root { --colour--2--fade: #DEC4BB; }\n\n:root { --colour--2--watermark: #F3E7E3; }\n\n:root { --colour--3--shade: #586D66; }\n\n:root { --colour--3--primary: #465D55; }\n\n:root { --colour--3--tint: #909E99; }\n\n:root { --colour--3--fade: #B5BEBB; }\n\n:root { --colour--3--watermark: #DADFDD; }\n\n:root { --colour--4--shade: #3C5766; }\n\n:root { --colour--4--primary: #78ADCC; }\n\n:root { --colour--4--tint: #9FC4DB; }\n\n:root { --colour--4--fade: #C5DCE9; }\n\n:root { --colour--4--watermark: #ECF3F8; }\n\n:root { --colour--5--shade: #0e0e0e; }\n\n:root { --colour--5--primary: #111111; }\n\n:root { --colour--5--tint: #292929; }\n\n:root { --colour--5--fade: #888888; }\n\n:root { --colour--5--watermark: #cfcfcf; }\n\n:root { --colour--6--shade: black; }\n\n:root { --colour--6--primary: #000000; }\n\n:root { --colour--6--tint: #1a1a1a; }\n\n:root { --colour--6--fade: gray; }\n\n:root { --colour--6--watermark: #cccccc; }\n\n:root { --colour--7--shade: black; }\n\n:root { --colour--7--primary: #000000; }\n\n:root { --colour--7--tint: #1a1a1a; }\n\n:root { --colour--7--fade: gray; }\n\n:root { --colour--7--watermark: #cccccc; }\n\n:root { --colour--8--shade: black; }\n\n:root { --colour--8--primary: #000000; }\n\n:root { --colour--8--tint: #1a1a1a; }\n\n:root { --colour--8--fade: gray; }\n\n:root { --colour--8--watermark: #cccccc; }\n\n:root { --colour--9--shade: black; }\n\n:root { --colour--9--primary: #000000; }\n\n:root { --colour--9--tint: #1a1a1a; }\n\n:root { --colour--9--fade: gray; }\n\n:root { --colour--9--watermark: #cccccc; }\n\n:root { --colour--black: #161109; --colour--white: #FFFFFF; --colour--impact: red; --colour--cta: blue; }\n\n:root { --colour--neutral--10: #e8e7e6; }\n\n:root { --colour--neutral--20: #d0cfce; }\n\n:root { --colour--neutral--30: #b9b8b5; }\n\n:root { --colour--neutral--40: #a2a09d; }\n\n:root { --colour--neutral--50: #8b8884; }\n\n:root { --colour--neutral--60: #73706b; }\n\n:root { --colour--neutral--70: #5c5853; }\n\n:root { --colour--neutral--80: #45413a; }\n\n:root { --colour--neutral--90: #2d2922; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\nhtml { font-family: Georgia, serif; font-size: 100%; color: #161109; }\n\n@media only screen and (min-width: 21em) { html { font-size: 100%; } }\n\n@media only screen and (min-width: 30em) { html { font-size: 100%; } }\n\n@media only screen and (min-width: 46.25em) { html { font-size: 100%; } }\n\n@media only screen and (min-width: 75em) { html { font-size: 100%; } }\n\n@media only screen and (min-width: 112.5em) { html { font-size: 100%; } }\n\n@media only screen and (min-width: 130em) { html { font-size: 100%; } }\n\nbody { font-size: 1rem; line-height: 1.5; }\n\np, ol, ul, th, td, dl, dd, dt, address { font-size: 1rem; line-height: 1.5; margin-top: 0; margin-bottom: 0.66667rem; }\n\n@media only screen and (min-width: 46.25em) { p, ol, ul, th, td, dl, dd, dt, address { margin-bottom: 1rem; } }\n\nblockquote { box-sizing: border-box; }\n\ndl { margin-bottom: 1.5rem; }\n\ndt { font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, sans-serif; font-weight: 700; text-transform: uppercase; }\n\ndd { margin-bottom: 1rem; margin-left: 0; }\n\nmenu, dir { margin: 0; padding: 0; }\n\nq { quotes: none; }\n\nabbr[title] { border-bottom: 1px dotted #5c5853; cursor: help; }\n\nb, strong, .strong { font-weight: 600; }\n\ndfn, .italic { font-style: italic; }\n\nins { background-color: #a2a09d; color: #161109; text-decoration: none; }\n\nmark { background-color: #a2a09d; color: #161109; font-style: italic; font-weight: 700; }\n\npre, code, kbd, samp { font-family: \"Andale Mono\", Monaco, Courier New, monospace; font-size: 1rem; line-height: 1.5; color: #45413a; }\n\npre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }\n\nsub, sup { position: relative; font-size: 0.66667rem; line-height: 0; vertical-align: baselineheight; }\n\nsup { top: -0.22222rem; }\n\nsub { bottom: -0.11111rem; }\n\n.spaced { letter-spacing: 1px; }\n\nhr { border: 0; border-bottom: 1px solid #5c5853; margin-top: 0; margin-bottom: 0.66667rem; }\n\n@media only screen and (min-width: 46.25em) { hr { margin-bottom: 3.375rem; } }\n\nh1, h2, h3, h4, h5, h6 { margin: 0; color: #161109; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, sans-serif; font-weight: 700; box-sizing: border-box; line-height: 1; }\n\nh1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a { color: #161109; text-decoration: none; }\n\nh1, h2, h3 { width: 100%; }\n\nh1, .h1 { font-size: 5.0625rem; margin-top: 2.25rem; margin-bottom: 1.5rem; }\n\nh2, .h2 { font-size: 3.375rem; margin-top: 2.25rem; margin-bottom: 1rem; }\n\nh3, .h3 { font-size: 2.25rem; margin-top: 2.25rem; margin-bottom: 0; text-transform: uppercase; }\n\nh4, .h4 { font-size: 1.5rem; margin-top: 2.25rem; margin-bottom: 0; }\n\nh5, .h5 { font-size: 1rem; margin-top: 1.5rem; font-weight: 400; font-style: italic; margin-bottom: 0; }\n\nh6, .h6 { font-size: 1rem; margin-top: 1.5rem; margin-bottom: 0; font-weight: 400; color: #45413a; }\n\na { color: blue; cursor: pointer; text-decoration: none; transition: all 0.06584s ease-in 0s; }\n\na:hover, a:active { text-decoration: underline; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\nol, ul { margin-top: 1rem; margin-bottom: 1rem; }\n\nli ul, li ol { margin-top: 1.5rem; margin-bottom: 1.5rem; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\np > a, p li > a, blockquote > a { color: blue; text-decoration: underline; }\n\np > a:hover, p > a:active, p li > a:hover, p li > a:active, blockquote > a:hover, blockquote > a:active { color: #140f22; }\n\n/* @file _index.sass @component ui_element_base @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* @file _form_elements @component ui_element_base Defines a common set of rules for form elements. Overrides browser default form element styling. Values are set in the configuration file. */\nselect:hover, input:hover[type='text'], input:hover[type='search'], input:hover[type='url'], input:hover[type='date'], input:hover[type='email'], input:hover[type='password'], .btn:hover, button:hover, input:hover[type='button'], .btn-submit:hover, input:hover[type='submit'], input:hover[type='reset'], .btn-inverted:hover, .btn-outline:hover, .btn-ghost:hover, textarea:hover, select:focus, input:focus[type='text'], input:focus[type='search'], input:focus[type='url'], input:focus[type='date'], input:focus[type='email'], input:focus[type='password'], .btn:focus, button:focus, input:focus[type='button'], .btn-submit:focus, input:focus[type='submit'], input:focus[type='reset'], .btn-inverted:focus, .btn-outline:focus, .btn-ghost:focus, textarea:focus, select:active, input:active[type='text'], input:active[type='search'], input:active[type='url'], input:active[type='date'], input:active[type='email'], input:active[type='password'], .btn:active, button:active, input:active[type='button'], .btn-submit:active, input:active[type='submit'], input:active[type='reset'], .btn-inverted:active, .btn-outline:active, .btn-ghost:active, textarea:active { text-decoration: none; border-color: blue; box-shadow: inset 0 0 0 2px blue; transition: all 0.5s ease-in 0s; }\n\nselect, input[type='text'], input[type='search'], input[type='url'], input[type='date'], input[type='email'], input[type='password'], .btn, button, input[type='button'], .btn-submit, input[type='submit'], input[type='reset'], .btn-inverted, .btn-outline, .btn-ghost { display: flex; flex-direction: row; justify-content: flex-start; align-items: center; vertical-align: baseline; box-sizing: border-box; zoom: 1; font-family: Georgia, serif; padding: 0.2963rem; font-size: 1rem; line-height: 1.5rem; font-weight: 400; vertical-align: middle; border-style: solid; border-width: 2px; border-color: #a2a09d; border-radius: 2px; background-clip: border-box; box-shadow: none; outline: none; transition: all 0.5s ease-in 0s; max-width: 100%; }\n\nselect, input[type='text'], input[type='search'], input[type='url'], input[type='date'], input[type='email'], input[type='password'] { appearance: none; height: 60px; min-height: 60px; }\n\ntextarea { box-sizing: border-box; max-width: 100%; padding: 0.2963rem; box-shadow: none; border-style: solid; border-width: 2px; border-color: #a2a09d; border-radius: 2px; background-clip: border-box; transition: all 0.5s ease-in 0s; }\n\n/* A note on element height Button base styling includes a logic intended to enforce consistent height between form inputs and buttons. This is particularly important for inline forms, where select, input and submit buttons must be consistent. The best approach is to enforce a $ui_element_height, and ensure that it's larger than the default button height. The fallback is a logic which takes into account ui elements border widths in the instances where text input has borders and buttons do not. */\n.btn, button, input[type='button'], .btn-submit, input[type='submit'], input[type='reset'], .btn-inverted, .btn-outline, .btn-ghost { height: 60px; flex-shrink: 0; font-size: 1.5rem; border-color: blue; justify-content: center; text-align: center; background-clip: border-box; cursor: pointer; min-width: 200px; width: 280px; max-width: 375px; transition: all 0.5s ease-in 0s; white-space: nowrap; }\n\n.btn:hover, button:hover, input:hover[type='button'], .btn-submit:hover, input:hover[type='submit'], input:hover[type='reset'], .btn-inverted:hover, .btn-outline:hover, .btn-ghost:hover, .btn:focus, button:focus, input:focus[type='button'], .btn-submit:focus, input:focus[type='submit'], input:focus[type='reset'], .btn-inverted:focus, .btn-outline:focus, .btn-ghost:focus, .btn:active, button:active, input:active[type='button'], .btn-submit:active, input:active[type='submit'], input:active[type='reset'], .btn-inverted:active, .btn-outline:active, .btn-ghost:active { text-decoration: none; box-shadow: none; transition: all 0.06584s ease-in 0s; }\n\n.btn, button, input[type='button'] { color: blue; background-color: #FFFFFF; border: 2px solid blue; }\n\n.btn:hover, button:hover, input:hover[type='button'], .btn:focus, button:focus, input:focus[type='button'], .btn:active, button:active, input:active[type='button'] { background-color: #FFFFFF; color: #161109; border: 2px solid #161109; }\n\n.btn-submit, input[type='submit'] { color: #FFFFFF; background-color: red; border: 2px solid red; }\n\n.btn-submit:hover, input:hover[type='submit'], .btn-submit:focus, input:focus[type='submit'], .btn-submit:active, input:active[type='submit'] { background-color: #2d0f08; color: #FFFFFF; border: 2px solid #2d0f08; }\n\ninput[type='reset'] { color: #5c5853; background-color: #FFFFFF; border: 2px solid #5c5853; }\n\ninput:hover[type='reset'], input:focus[type='reset'], input:active[type='reset'] { background-color: #5c5853; color: #161109; }\n\n.btn-inverted { color: #FFFFFF; background-color: blue; border: 2px solid #FFFFFF; }\n\n.btn-inverted:hover, .btn-inverted:focus, .btn-inverted:active { background-color: #161109; color: blue; }\n\n.btn-outline { color: #73706b; background-color: transparent; border: 2px solid #73706b; }\n\n.btn-outline:hover, .btn-outline:focus, .btn-outline:active { color: blue; background-color: transparent; border: 2px solid blue; }\n\n.btn-ghost { color: #FFFFFF; background-color: transparent; border: 2px solid #FFFFFF; }\n\n.btn-ghost:hover, .btn-ghost:focus, .btn-ghost:active { border: 2px solid #FFFFFF; background-color: #040302; color: #FFFFFF; }\n\n/* @file _index.sass @component standardized_buttons @category 40_ui @group a_components @description  Loads all sass files or subdirectory indices in its directory. */\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/* Defines a common set of rules for form elements. Definitions are set in a_core/10_Definitions/_forms.sass */\ninput[type='submit'] { margin-top: 1.5rem; }\n\n.form-item { margin-top: 1.5rem; }\n\n.form-item:first-child { margin-top: 0; }\n\n/* @file _index.sass @component standardized_animation @category 50_animation @description  Handles basic animation settings. */\n/** @file _animation_root_variables.sass @category 50_animation @component standardized_animation @description Adds CSS variables to be passed to javascript */\n:root { --animation--heartbeat: 1000; --animation--slidetransition: 4000; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\nfigure { margin: 0; box-sizing: border-box; }\n\nfigcaption { display: block; box-sizing: border-box; font-weight: normal; font-size: 1rem; font-style: italic; color: #161109; }\n\n/* @file index.sass @description  Loads all sass files or subdirectory indices in its directory. */\nsvg { width: inherit; height: inherit; fill: inherit; }\n\nsvg .cls-1, svg .cls-2, svg .cls-3 { fill: inherit; }\n\n/* @component 30_typography/fluid_type @file _index_local_configuration.sass @description  Loads all sass files or subdirectory indices in its directory. */\n/** @file _fluid_type_component.sass */\n.fluid-type { font-size: 1rem; }\n\n@media (min-width: 30em) { .fluid-type { font-size: calc(1rem + 0.5 * (100vw - 30em) / 82.5); } }\n\n@media (min-width: 112.5em) { .fluid-type { font-size: 1.5rem; } }\n\n.fluid-type address, .fluid-type article, .fluid-type aside, .fluid-type section, .fluid-type ul { font-size: 1em; line-height: inherit; }\n","/**\n * @file\n * Layout Configuration. Set a modular scale and standardized spacing. Define breakpoints.\n *\n * Copy this file to your theme configuration folder of your local theme or component and adjust its _index file to import.\n */\n\n\n$rootsize: 100%;    // Assigned to HTML element. 100% = 16px. Referenced as 1rem.\n$blh: 1.5rem;  // Base size unit in rem (relative to the HTML root size).\n$scale: 1.5; // Sets an size interval mapped over integers. See https://www.modularscale.com for a demonstration.\n\n$max_width: 1400px;\n$legible_inset_width: 750px;\n\n$masthead_height: 60px;\n$footer_height: 100px;\n$admin_bar_height: 40px;\n\n$proportional_width_unit: (100% - (100/$scale))/2;\n\n$standard_sidebar_width: $proportional_width_unit;\n$right_sidebar_width: $standard_sidebar_width * 2;\n$left_sidebar_width: $standard_sidebar_width;\n\n// Block spacing is a reference variable (in relative value) that determines the spacing between items in a layout.\n// Typically used for vertical spacing (e.g. between stacked content boxes).\n\n// Edge padding is similar, defining the horizontal padding on content boxes. Used to ensure\n// that content doesn't collapse right to the edge of the viewport. Setting\n// these identically will create spacing consistency.\n\n// Mobile spacing tends to be tighter than desktop views.\n\n// Note: Functions using these values should anticipate null values to indicate “zero” (as opposed to a value\n// of “0”, which is an integer on the relative scale).\n\n$block_spacing: 2;\n$mobile_block_spacing: -2;\n\n$edge_padding_factor: $block_spacing;\n$mobile_edge_padding_factor: $mobile_block_spacing;\n\n// Standardized breakpoint for moving from desktop layouts to stacked layouts\n\n$stack_breakpoint: 'med';\n$tablet_breakpoint: 'med';\n$desktop_breakpoint: 'lrg';\n$ultrawide_breakpoint: 'xlrg';\n\n// Less wordy aliases. Keep the others for backwards compatibility.\n\n$stack: $stack_breakpoint;\n$tablet: $tablet_breakpoint;\n$desktop: $desktop_breakpoint;\n$ultrawide: $ultrawide_breakpoint;\n\n/* !BREAKPOINTS */\n\n\n/*  Values for your responsive design breakpoints. This has now been rethought\n    thanks to https://medium.freecodecamp.com/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862#.rduwqht4g\n\n  336px \t  21em       xsml\n  600px \t  37.5em     sml\n  900px \t  46.25      med\n  1200px    75em       lrg\n  1800px\t  100em      xlrg   */\n\n$media_type: screen;\n$feature: min-width;\n\n$breakpoints: (xsml: 21em, sml: 30em, med: 46.25em, lrg: 75em, xlrg: 112.5em, xxlrg: 130em);\n\n/* Modular scale reference\n\n  double-octave    : 4\n  pi               : 3.14159265359\n  major-twelfth    : 3\n  major-eleventh   : 2.666666667\n  major-tenth      : 2.5\n  octave           : 2\n  major-seventh    : 1.875\n  minor-seventh    : 1.777777778\n  major-sixth      : 1.666666667\n  phi              : 1.618034\n  golden           : $phi\n  minor-sixth      : 1.6\n  fifth            : 1.5\n  augmented-fourth : 1.41421\n  fourth           : 1.333333333\n  major-third      : 1.25\n  minor-third      : 1.2\n  major-second     : 1.125\n  minor-second     : 1.066666667       */\n","@keyframes build {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n@keyframes build-08 {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 0.8; } }\n\n@keyframes build-05 {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 0.5; } }\n","@keyframes pulse {\n  0% {\n    opacity: 0.5;\n    transform: scale(1, 1); }\n  50% {\n    opacity: 1;\n    transform: scale(1.1, 1.1); }\n  100% {\n    opacity: 0.5;\n    transform: scale(1, 1); } }\n","/**\n * @file\n * Layout Configuration. Set a modular scale and standardized spacing. Define breakpoints.\n *\n * Copy this file to your theme configuration folder of your local theme or component and adjust its _index file to import.\n */\n\n\n$rootsize: 100%;    // Assigned to HTML element. 100% = 16px. Referenced as 1rem.\n$blh: 1.5rem;  // Base size unit in rem (relative to the HTML root size).\n$scale: 1.5; // Sets an size interval mapped over integers. See https://www.modularscale.com for a demonstration.\n\n$max_width: 1400px;\n$legible_inset_width: 750px;\n\n$masthead_height: 60px;\n$footer_height: 100px;\n$admin_bar_height: 40px;\n\n$proportional_width_unit: (100% - (100/$scale))/2;\n\n$standard_sidebar_width: $proportional_width_unit;\n$right_sidebar_width: $standard_sidebar_width * 2;\n$left_sidebar_width: $standard_sidebar_width;\n\n// Block spacing is a reference variable (in relative value) that determines the spacing between items in a layout.\n// Typically used for vertical spacing (e.g. between stacked content boxes).\n\n// Edge padding is similar, defining the horizontal padding on content boxes. Used to ensure\n// that content doesn't collapse right to the edge of the viewport. Setting\n// these identically will create spacing consistency.\n\n// Mobile spacing tends to be tighter than desktop views.\n\n// Note: Functions using these values should anticipate null values to indicate “zero” (as opposed to a value\n// of “0”, which is an integer on the relative scale).\n\n$block_spacing: 2;\n$mobile_block_spacing: -2;\n\n$edge_padding_factor: $block_spacing;\n$mobile_edge_padding_factor: $mobile_block_spacing;\n\n// Standardized breakpoint for moving from desktop layouts to stacked layouts\n\n$stack_breakpoint: 'med';\n$tablet_breakpoint: 'med';\n$desktop_breakpoint: 'lrg';\n$ultrawide_breakpoint: 'xlrg';\n\n// Less wordy aliases. Keep the others for backwards compatibility.\n\n$stack: $stack_breakpoint;\n$tablet: $tablet_breakpoint;\n$desktop: $desktop_breakpoint;\n$ultrawide: $ultrawide_breakpoint;\n\n/* !BREAKPOINTS */\n\n\n/*  Values for your responsive design breakpoints. This has now been rethought\n    thanks to https://medium.freecodecamp.com/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862#.rduwqht4g\n\n  336px \t  21em       xsml\n  600px \t  37.5em     sml\n  900px \t  46.25      med\n  1200px    75em       lrg\n  1800px\t  100em      xlrg   */\n\n$media_type: screen;\n$feature: min-width;\n\n$breakpoints: (xsml: 21em, sml: 30em, med: 46.25em, lrg: 75em, xlrg: 112.5em, xxlrg: 130em);\n\n/* Modular scale reference\n\n  double-octave    : 4\n  pi               : 3.14159265359\n  major-twelfth    : 3\n  major-eleventh   : 2.666666667\n  major-tenth      : 2.5\n  octave           : 2\n  major-seventh    : 1.875\n  minor-seventh    : 1.777777778\n  major-sixth      : 1.666666667\n  phi              : 1.618034\n  golden           : $phi\n  minor-sixth      : 1.6\n  fifth            : 1.5\n  augmented-fourth : 1.41421\n  fourth           : 1.333333333\n  major-third      : 1.25\n  minor-third      : 1.2\n  major-second     : 1.125\n  minor-second     : 1.066666667       */\n","/**\n * @file\n * Colour System Configuration. A standardized approach to defining and modulating colour.\n *\n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n\n /* !COLOUR GRID\n    Define your design’s palette by choosing the main colours */\n\n$clr1: #FFC565;\n$clr2: #943D21;\n$clr3: #465D55;\n$clr4: #78ADCC;\n\n\n// Define alternative blackpoint, whitepoint and neutrals.\n\n$black: #161109;\n$white: #FFFFFF;\n\n\n// Color map examples\n\n$clr1_map: (dark: #554222, shade: #D4A454, primary: $clr1, tint: #FFD898, fade: #FFECCC, watermark: #FFF7E9);\n$clr2_map: (dark: #632916, shade: #80351C, primary: $clr2, tint: #C59587, fade: #DEC4BB, watermark: #F3E7E3);\n$clr3_map: (dark: #465D55, shade: #586D66, primary: $clr3, tint: #909E99, fade: #B5BEBB, watermark: #DADFDD);\n$clr4_map: (dark: #283A44, shade: #3C5766, primary: $clr4, tint: #9FC4DB, fade: #C5DCE9, watermark: #ECF3F8);\n\n\n\n// Neutrals\n// neutral() function mixes blackpoint and whitepoint.\n\n$lightest_neutral: neutral(5);\n$lighter_neutral: neutral(30);\n$light_neutral: neutral(40);\n$neutral: neutral();\n$mid_neutral: neutral(60);\n$dark_neutral: neutral(70);\n$darker_neutral: neutral(80);\n$darkest_neutral: neutral(90);\n\n// Background\n\n$bgcolor: #283A44;\n$bgcolor2: #FFD898;\n$bgcolor3: #FFF7E9;\n$bgcolor4: #DEC4BB;\n$bgcolor5: #D9D8D7;\n$bgcolor6: #F7F6F5;\n\n\n\n//Aliases\n\n$impact: red;\n$cta: blue;\n$de_emphasized: $light_neutral;\n$de_activated: $lighter_neutral;\n$link_colour: $cta;\n","/*\n   @file _grid.sass\n   @category 10_layout\n   @component layout_foundation_basic\n   @description  Establishes responsiveness for top-level sections. Requires a set DOM structure.\n   @todo  Uses display: grid. Polyfill this for pre-grid support. */\n\nbody > *, .tier {\n  margin-top: 0;\n  margin-bottom: 0;\n  width: 100%;\n\n  &:not(.full) > * {\n    @include responsive-inset(); } } // Also consider standard-edge-padding() for top-level tiers\n\nbody > *:not(.full) > *, .tier:not(.full) > * {\n  display: grid;\n  grid-template-columns: 1fr;\n\n  @include bp($stack_breakpoint) {\n    grid-template-columns: [left] $left_sidebar_width [main] 1fr [right] $right_sidebar_width;\n    grid-column-gap: rv(0);\n    grid-row-gap: rv(0);\n\n    > div, > main, > article {\n      grid-column-start: main;\n      grid-column-end: right; }\n\n    > div:first-child, > article:first-child {\n      grid-column-start: left; }\n\n    > div:last-child, > article:last-child {\n      grid-column-end: end; } } }\n","/**\n * @file _responsive_inset.sass\n * @category 10_layout\n * @group a_components\n * @description Mixins pertaining to standardized content widths using relative values.\n *\n */\n\n// @args $factor: Padding factor for top-level boxes. Set to null for zero (margin: 0)\n// @args $mobile_factor: Padding factor for mobile. Set to null for zero (margin: 0)\n// @args $max Max width of the inset. Defaults to $max_width. Set to null for no max width\n// @args $base: Base spacing value. Defaults to $blh\n// @args $ratio: Relative scale. Defaults to $scale\n\n@mixin responsive-inset($factor: $edge_padding_factor, $mobile_factor: $mobile_edge_padding_factor, $max: $max_width, $important: true, $base: $blh, $ratio: $scale) {\n  padding-left: rv($mobile_factor,$base,$ratio);\n  padding-right: rv($mobile_factor,$base,$ratio);\n\n  @include bp($stack_breakpoint) {\n    padding-left: rv($factor,$base,$ratio);\n    padding-right: rv($factor,$base,$ratio);\n\n    @if $important == true {\n      margin-left: auto !important;\n      margin-right: auto !important; }\n    @else {\n      margin-left: auto;\n      margin-right: auto; }\n\n\n    @if $max != null {\n      max-width: $max; } }\n\n }  // Alias\n\n@mixin inset-content($factor: $edge_padding_factor, $mobile_factor: $mobile_edge_padding_factor, $max: $max_width, $base: $blh, $ratio: $scale) {\n  @include responsive-inset($factor,$mobile_factor, $max, $base, $ratio); }\n\n\n// Insets to the standard edge with no maximum width margin setting\n\n@mixin standard-inset($padding: $edge_padding_factor, $mobile_padding: $mobile_edge_padding_factor) {\n  padding-left: rv($mobile_padding);\n  padding-right: rv($mobile_padding);\n\n  @include bp($stack_breakpoint) {\n    padding-left: rv($padding);\n    padding-right: rv($padding); } }\n\n\n// Alternative to full width presentation. Allows you to set a negative margin left\n// by a factor to the legible width. This allows you expand by a set amount\n// left and right of a primary text column without necessarily moving to the max width.\n\n@mixin negative-content-margin($factor: 7,$important: false) {\n  $adjustment: rv($factor);\n  $adjustment_neg: $adjustment * -1;\n  $edge: rv($edge_padding_factor) * 2;\n  $max: calc(#{$legible_inset_width} + (#{$adjustment} * 2) - #{$edge});\n  @include responsive-inset(null, null);\n  @include bp($stack_breakpoint) {\n    @if $important != false {\n      max-width: $max !important; } // Important declaration this style to be added as a standalone class, e.g. .wide, even if a max-width has already been declared.\n    @else {\n      max-width: $max; } } }\n\n// Standardized handler for creating legible line lengths\n\n@mixin inset-text($factor: null, $mobile_factor: null, $max: $legible_inset_width, $base: $blh, $ratio: $scale) {\n  @include inset-content($factor, $mobile_factor, $max, $base, $ratio); }\n\n// Alias\n@mixin inset-legible($factor: null, $mobile_factor: null, $max: $legible_inset_width, $base: $blh, $ratio: $scale) {\n  @include inset-text($factor, $mobile_factor, $max, $base, $ratio); }\n\n// Allows you to manually reset width (e.g. for use at different breakpoints).\n\n@mixin inset-full() {\n  max-width: $max_width;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 0;\n  padding-right: 0; }\n\n// Currently an alias for insetting text to legible maximum. Different grid implementations may override this.\n\n@mixin narrow($factor: null, $mobile_factor: null, $max: $legible_inset_width, $base: $blh, $ratio: $scale) {\n  @include inset-text($factor, $mobile_factor, $max, $base, $ratio); }\n\n// Currently an alias for establishing a negative content margin. Different grid implementations may override this.\n\n@mixin wide($factor: 6, $mobile_factor: $mobile_edge_padding_factor) {\n  @include negative-content-margin($factor, $mobile_factor); }\n\n// Legacy aliases\n@mixin full-width-text() {\n  @include inset-full(); }\n\n@mixin full-width() {\n  @include inset-full(); }\n","@function ms-function($v: 0, $base: false, $ratio: false, $thread: false, $settings: $modularscale) {\n\n  // Parse settings\n  $ms-settings: ms-settings($base,$ratio,$thread,$settings);\n  $base: nth($ms-settings, 1);\n  $ratio: nth($ms-settings, 2);\n\n  // Render target values from settings.\n  @if unit($ratio) != '' {\n    $ratio: ms-target($ratio,$base)\n  }\n\n  // Fast calc if not multi stranded\n  @if(length($base) == 1) {\n    @return ms-round-px(ms-pow($ratio, $v) * $base);\n  }\n\n  // Create new base array\n  $ms-bases: nth($base,1);\n\n  // Normalize base values\n  @for $i from 2 through length($base) {\n    // initial base value\n    $ms-base: nth($base,$i);\n    // If the base is bigger than the main base\n    @if($ms-base > nth($base,1)) {\n      // divide the value until it aligns with main base.\n      @while($ms-base > nth($base,1)) {\n        $ms-base: $ms-base / $ratio;\n      }\n      $ms-base: $ms-base * $ratio;\n    }\n    // If the base is smaller than the main base.\n    @else if ($ms-base < nth($base,1)) {\n      // pump up the value until it aligns with main base.\n      @while $ms-base < nth($base,1) {\n        $ms-base: $ms-base * $ratio;\n      }\n    }\n    // Push into new array\n    $ms-bases: append($ms-bases,$ms-base);\n  }\n\n  // Sort array from smallest to largest.\n  $ms-bases: ms-sort($ms-bases);\n\n  // Find step to use in calculation\n  $vtep: floor($v / length($ms-bases));\n  // Find base to use in calculation\n  $ms-base: round(($v / length($ms-bases) - $vtep) * length($ms-bases)) + 1;\n\n  @return ms-round-px(ms-pow($ratio, $vtep) * nth($ms-bases,$ms-base));\n}","// Breakpoints for Media Queries ------------------------------\n\n@mixin bp($point) {\n\n  @if $point == xxsml {\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xsml') - 5em) {\n      @content; } }\n\n  @else if $point == xsml {\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xsml')) {\n      @content; } }\n\n  @else if $point == sml {\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'sml')) {\n      @content; } }\n\n  @else if $point == med {\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'med')) {\n      @content; } }\n\n  @else if $point == lrg {\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'lrg')) {\n      @content; } }\n\n  @else if $point == xlrg {\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xlrg')) {\n      @content; } }\n\n  @else if $point == xxlrg {\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xxlrg')) {\n      @content; } } }\n","/* Sets standard viewport to the device-width */\n\n@mixin device-width-viewport() {\n  @-webkit-viewport {\n    width: device-width; }\n\n  @-moz-viewport {\n    width: device-width; }\n\n  @-ms-viewport {\n    width: device-width; }\n\n  @-o-viewport {\n    width: device-width; }\n\n  @viewport {\n    width: device-width; } }\n","/*\n   @file _primary_content.sass\n   @category 10_layout\n   @component layout_foundation_basic\n   @description  Defines styles for the primary content section (#primary-content and main), including standardized spacing. */\n\n\n#primary-content {\n  > * > * > * {\n    @include standardized_block_spacing(); } }\n\n// For situations where main is divided into stacked content <div> blocks. Otherwise, spacing will be according to typographic definitions (for headings, paragraphs, etc.).\n\nmain {\n  > div {\n    @include standardized_block_spacing(); } }\n","/**\n *  @file Block Spacing Mixin\n *  @group 10_layout\n *  @description Sets a standardized space for stacked content blocks.\n *\n */\n\n@mixin standardized-block-spacing($desktop_spacing: $block_spacing,$mobile_spacing: $mobile_block_spacing) {\n  margin-top: 0;\n  margin-bottom: rv($mobile_spacing);\n\n  @include bp($stack_breakpoint) {\n    margin-bottom: rv($desktop_spacing); } }\n","/**\n *  @file _set_css_variables\n *  @component layout_css_variables\n *  @file _index.sass\n *  @description  Sets breakpoints and breakpoint aliases as CSS variables, making them available to Javascript */\n\n$rootvar: ':root'; // See https://github.com/sass/libsass/issues/2511\n\n$em_factor: convert($rootsize,px);\n\n#{$rootvar} {\n  @each $bp, $value in $breakpoints {\n    @if unit($value) != 'px' {\n      $value: strip_unit(convert($value,px,$em_factor)); }\n    --breakpoint-#{$bp}: #{$value}; }\n\n  $stack: strip_unit(convert(map-get($breakpoints,$stack_breakpoint),px,$em_factor));\n  $tablet: strip_unit(convert(map-get($breakpoints,$tablet_breakpoint),px,$em_factor));\n  $desktop: strip_unit(convert(map-get($breakpoints,$desktop_breakpoint),px,$em_factor));\n  $ultrawide: strip_unit(convert(map-get($breakpoints,$ultrawide_breakpoint),px,$em_factor));\n\n  --breakpoint-stack: #{$stack};\n  --breakpoint-tablet: #{$tablet};\n  --breakpoint-desktop: #{$desktop};\n  --breakpoint-ultrawide: #{$ultrawide}; }\n","// responsive by default\n\nimg {\n  max-width: 100%;\n  width: 100%;\n  height: auto;\n  border-width: 0;\n  vertical-align: middle;\n  -ms-interpolation-mode: bicubic; }\n","/* !BASIC STRUCTURE */\n\nhtml {\n  scroll-behaviour: smooth; }\n\nhtml, body {\n  height: 100%; }\n\nbody {\n  padding: 0;\n  margin: 0;\n  background-color: $bgcolor; }\n\ndiv, main, aside, nav, article, section, header, footer {\n  box-sizing: border-box; }\n","/* MOBILE */\n\n#mobile-header-nav {\n  display: block;\n\n  @include bp(med) {\n    display: none; } }\n\n#mobile-nav-block {\n  display: none; }\n","/**\n *  @file colour_root_variables.sass\n *  @category 20_colour\n *  @component _root_colour_variables\n *  @description Adds CSS variables to be passed to javascript */\n\n$rootvar: ':root'; // See https://github.com/sass/libsass/issues/2511\n\n$colours: $clr1 $clr2 $clr3 $clr4 $clr5 $clr6 $clr7 $clr8  $clr9;\n\n@for $i from 1 through 9 {\n  #{$rootvar} {\n    $colour: nth($colours,$i);\n    --colour--#{$i}: #{$colour}; } }\n\n\n$colour_maps: $clr1_map $clr2_map $clr3_map $clr4_map $clr5_map $clr6_map $clr7_map $clr8_map $clr9_map;\n$colour_grid_keys: 'shade','primary','tint','fade','watermark';\n\n@for $i from 1 through 9 {\n  $map: nth($colour_maps,$i);\n  @each $key in $colour_grid_keys {\n    #{$rootvar} {\n      $value: map-get($map,$key);\n      --colour--#{$i}--#{$key}: #{$value}; } } }\n\n\n#{$rootvar} {\n  --colour--black: #{$black};\n  --colour--white: #{$white};\n  --colour--impact: #{$impact};\n  --colour--cta: #{$cta}; }\n\n\n@for $i from 1 through 9 {\n  $key: $i * 10;\n  $neutral: neutral($key);\n  #{$rootvar} {\n    --colour--neutral--#{$key}: #{$neutral}; } }\n","// Defines the base type scale system.\n\nhtml {\n  font-family: $basefont;\n  font-size: ms(map-get($typescale,'base'),$rootsize,$scale);\n  color: $black;\n\n  @include bp(xsml) {\n    font-size: ms(map-get($typescale,'xsml'),$rootsize,$scale); }\n\n  @include bp(sml) {\n    font-size: ms(map-get($typescale,'sml'),$rootsize,$scale); }\n\n  @include bp(med) {\n    font-size: ms(map-get($typescale,'med'),$rootsize,$scale); }\n\n  @include bp(lrg) {\n    font-size: ms(map-get($typescale,'lrg'),$rootsize,$scale); }\n\n  @include bp(xlrg) {\n    font-size: ms(map-get($typescale,'xlrg'),$rootsize,$scale); }\n\n  @include bp(xxlrg) {\n    font-size: ms(map-get($typescale,'xxlrg'),$rootsize,$scale); } }\n\nbody {\n  font-size: $basetypesize;\n  @include standard-line-height(); }\n","/**\n * @file\n * Typography Configuration. Used to define a standard proportion across the site as per the modularscale library.\n *\n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n\n$basetypesize: 1rem; // Body font size relative to rootsize above. Establishes core unit for other font sizes (rem, em, px, etc.).\n\n// NOTE baseline height ($blh) is defined in the 10_layout core, tying leading together with general spacing.\n\n// Set size factors for type. Size factors are a funciton of $basetypesize, $scale and device-width determined $typesscale.\n\n$sizefactors: (base: 0, h1: 4, h2: 3, h3: 2, h4: 1, h5: 0, h6: 0);\n\n// Scale factor for type at each breakpoint. Set to 0 to keep size consistent.\n\n$typescale: (base: 0, xsml: 0, sml: 0, med:0, lrg: 0, xlrg: 0, xxlrg: 0);\n\n// Type faces are defined in 00_configuration folders, which get loaded before all other styles.\n\n// Default fonts. Use the font loader to load fonts.\n\n$basefont: Georgia, serif;\n$headingfont: \"Helvetica Neue\", Helvetica, Tahoma, Arial, sans-serif;\n$altfont: Georgia, serif;\n$codefont: \"Andale Mono\", Monaco, Courier New, monospace;\n\n$font_path: '../fonts';\n\n// available base (b), heading (h) and alt (a) sizes listed\n\n\n$extralight: 100;\n$thin: 200;\n$light: 300;       // b, h\n$normal: 400;      // b, h, a\n$medium: 500;\n$semibold: 600;    // a\n$bold: 700;        // b, a\n$extrabold: 800;   // h\n$heavy: 900;\n\n\n// legacy\n\n$extralightfw: $extralight;\n$thinfw: $thin;\n$lightfw: $light;       // b, h\n$normalfw: $normal;      // b, h, a\n$mediumfw: $medium;\n$semiboldfw: 600;    // a\n$boldfw: $bold;        // b, a\n$extraboldfw: $extrabold;   // h\n$blackfw: $heavy;\n\n// Headers\n\n$headingfw: $bold;\n\n// Tables\n\n$row_header_bg: neutral(10);\n$row_border_color: neutral(10);\n$row_zebra_stripe_color: neutral(3);\n\n// Aliases\n\n$h1fontsize: $basetypesize * map-get($sizefactors,'h1');\n$h2fontsize: $basetypesize * map-get($sizefactors,'h2');\n$h3fontsize: $basetypesize * map-get($sizefactors,'h3');\n$h4fontsize: $basetypesize * map-get($sizefactors,'h4');\n$h5fontsize: $basetypesize * map-get($sizefactors,'h5');\n$h6fontsize: $basetypesize * map-get($sizefactors,'h6');\n","// Returns the line height as a factor of the baseline height to the given scale\n// Note that there are some shenanigans going on here. Right now the line-height is given as a ratio of the font size by stripping\n// the unit of the $blh. This allows $blh to be in rem units while linespacing is proportional to font size.\n// Ultimately proportion is maintained but $blh (baseline height) as a variable becomes a misnomer.\n\n@mixin line-height($factor: 0,$ratio: $scale) {\n  line-height: ms($factor,strip-unit($blh),$ratio); }\n\n@mixin set-line-height($factor: 0,$ratio: $scale) {\n  @include line-height($factor,$ratio); }\n\n@mixin standard-line-height() {\n  @include line-height(map-get($sizefactors,'base')); }\n\n@mixin single-line-height() {\n  line-height: 1; }\n","// Sass does not have native pow() support so this needs to be added.\n// Compass and other libs implement this more extensively.\n// In order to keep this simple, use those when they are avalible.\n// Issue for pow() support in Sass: https://github.com/sass/sass/issues/684\n\n@function ms-pow($b,$e) {\n\n  // Return 1 if exponent is 0\n  @if $e == 0 {\n    @return 1;\n  }\n\n  // If pow() exists (compass or mathsass) use that.\n  @if function-exists('pow') {\n    @return pow($b,$e);\n  }\n\n  // This does not support non-integer exponents,\n  // Check and return an error if a non-integer exponent is passed.\n  @if (floor($e) != $e) {\n    @error 'Non-integer values are not supported in modularscale by default. Try using mathsass in your project to add non-integer scale support. https://github.com/terkel/mathsass'\n  }\n\n  // Seed the return.\n  $ms-return: $b;\n\n  // Multiply or divide by the specified number of times.\n  @if $e > 0 {\n    @for $i from 1 to $e {\n      $ms-return: $ms-return * $b;\n    }\n  }\n  @if $e < 0 {\n    @for $i from $e through 0 {\n      $ms-return: $ms-return / $b;\n    }\n  }\n  @return $ms-return;\n}","p, ol, ul, th, td, dl, dd, dt, address {\n  @include font-size(map-get($sizefactors,'base'));\n  @include standard-line-height();\n  @include standardized-block-spacing($block_spacing - 3); }\n\nblockquote {\n  box-sizing: border-box; }\n\ndl {\n  margin-bottom: rv(0); }\n\ndt {\n  font-family: $headingfont;\n  font-weight: $boldfw;\n  text-transform: uppercase; }\n\ndd {\n  margin-bottom: rv(-1);\n  margin-left: 0; }\n\nmenu, dir {\n  margin: 0;\n  padding: 0; }\n\nq {\n  quotes: none; }\n\nabbr[title] {\n  border-bottom: 1px dotted $dark_neutral;\n  cursor: help; }\n\nb, strong, .strong {\n  font-weight: $semiboldfw; }\n\ndfn, .italic {\n  font-style: italic; }\n\nins {\n  background-color: $light_neutral;\n  color: $black;\n  text-decoration: none; }\n\nmark {\n  background-color:  $light_neutral;\n  color: $black;\n  font-style: italic;\n  font-weight: $boldfw; }\n\npre, code, kbd, samp {\n  font-family: $codefont;\n  @include font-size(0);\n  @include line-height(0);\n  color: $darker_neutral; }\n\npre {\n  white-space: pre;\n  white-space: pre-wrap;\n  word-wrap: break-word; }\n\nsub, sup {\n  position: relative;\n  @include font-size(-1);\n  line-height: 0;\n  vertical-align: baselineheight; }\n\nsup {\n  top: ms(-2,$basetypesize,$scale) * -0.5; }\n\nsub {\n  bottom: ms(-2,$basetypesize,$scale) * -0.25; }\n\n.spaced {\n  letter-spacing: 1px; }\n\nhr {\n  border: 0;\n  border-bottom: 1px solid $dark_neutral;\n  @include standardized_block_spacing(); }\n","/**\n * @file _font_size.sass\n * @category 20_typography\n * @group a_components\n * @description Creates a font-size declaration based on relative value $factor, $basetypesize and $scale.\n *\n */\n\n@mixin font-size($factor: 0,$ratio: $scale) {\n  font-size: font-value($factor,$ratio); }\n\n// Set notation\n\n@mixin set-font-size($factor: 0,$ratio: $scale) {\n  @include font-size($factor,$ratio); }\n\n// Unscaled font-size\n\n@mixin base-font-size() {\n  font-size: $basetypesize; }\n\n// Alias of above\n\n@mixin base-type-size() {\n  @include base-font-size(); }\n","/* Retrieves a neutral based on intensity. Higher intensities are darker. */\n\n/* Based on a preset neutral array. Must be a factor of 10 between 10 and 90. */\n\n@function neutral($intensity: 50, $dark: $black,$light: $white) {\n  @return  neutral_mix(($intensity * 1%),$dark,$light); }\n\n/* Creates a neutral by mixing dark and light colours to the provided percentage. */\n\n@function neutral_mix($intensity: 50%, $dark: $black,$light: $white) {\n  @return mix($dark,$light,$intensity); }\n","// HEADINGS ------------------------------\n\nh1, h2, h3, h4, h5, h6 {\n  margin: 0;\n  color: $black;\n  font-family: $headingfont;\n  font-weight: $headingfw;\n  box-sizing: border-box;\n  @include single-line-height();\n\n  > a {\n    color: $black;\n    text-decoration: none; } }\n\nh1,h2,h3 {\n  width: 100%; }\n\nh1, .h1 {\n  @include font-size(map-get($sizefactors,'h1'));\n  margin-top: rv(1);\n  margin-bottom: rv(0); }\n\nh2, .h2 {\n  @include font-size(map-get($sizefactors,'h2'));\n  margin-top: rv(1);\n  margin-bottom: rv(-1); }\n\nh3, .h3, %h3 {\n  @include font-size(map-get($sizefactors,'h3'));\n  margin-top: rv(1);\n  margin-bottom: 0;\n  text-transform: uppercase; }\n\nh4, .h4 {\n  @include font-size(map-get($sizefactors,'h4'));\n  margin-top: rv(1);\n  margin-bottom: 0; }\n\nh5, .h5 {\n  @include font-size(map-get($sizefactors,'h5'));\n  margin-top: rv(0);\n  font-weight: $normalfw;\n  font-style: italic;\n  margin-bottom: 0; }\n\nh6, .h6 {\n  @include font-size(map-get($sizefactors,'h6'));\n  margin-top: rv(0);\n  margin-bottom: 0;\n  font-weight: $normalfw;\n  color: neutral(80); }\n","a {\n  color: $link_colour;\n  cursor: pointer;\n  text-decoration: none;\n  @include transition(all,-5);\n\n  &:hover, &:active {\n    @include link-underline(); } }\n\n","/*\n   @file _standard_transition.sass\n   @category 50_animation\n   @group a_components\n   @description  Creates a standard transition property based on configuration values. */\n\n@mixin transition($properties: all,$timing: 0, $delay: $base_delay, $easing: $standard_easing) {\n\n  $transitions: ();\n\n  @each $property in $properties {\n    $transition: $property rd($timing) $easing rd($delay);\n    $transitions: append($transitions,$transition,comma); }\n\n  transition: $transitions; }\n\n// Legacy\n\n@mixin standard-transition($properties: all,$timing: 0, $delay: $base_delay, $easing: $standard_easing) {\n  @include transition($properties,$timing,$delay,$easing); }\n","/**\n * @file _relative_duration.sass\n * @category 50_animation\n * @group a_components\n * @description Returns a value in seconds according to the standardized site scale. Uses the modular scale SASS library. See https://www.modularscale.com\n *\n * @args  $factor: An integer corresponding to a step on the scale. Defaults to 0.\n * @args  $base: A value in seconds. Defaults to the site’s $heartbeat\n * @args  $ratio: The ratio (with a denominator of 1) denoting the distance between steps on the scale. Defaults to the site’s $scale\n *\n * Note: if the $factor is set to null this function will return a 0 value (as a factor of “0” is the base point on the modular scale).\n */\n\n@function relative_duration($factor: 0,$base: $heartbeat, $ratio:$scale) {\n  @if $factor == null {\n    @return 0s; }\n  @else {\n    @return ms($factor,$base,$ratio); } }\n\n// Alias\n@function rd($factor: 0,$base: $heartbeat, $ratio:$scale) {\n  @return relative_duration($factor,$base,$ratio); }\n","/**\n *  @file _link_underline.sass\n *  @category 30_typography\n *  @component 00_Core\n *  @description  Adds an underline. Allows themes to override with by redefining it, e.g. to change from a text-underline to border-bottom approach */\n\n@mixin link-underline() {\n  text-decoration: underline; }\n","ol, ul {\n  margin-top: rv(-1);\n  margin-bottom: rv(-1); }\n\nli ul, li ol {\n  margin-top: rv(0);\n  margin-bottom: rv(0); }\n","p > a, p li > a, blockquote > a {\n  color: $link_colour;\n  @include link-underline();\n\n  &:hover, &:active {\n    color: mix($link_colour,$black,10%); } }\n","/*\n * @file _form_elements\n * @component ui_element_base\n * Defines a common set of rules for form elements.\n * Overrides browser default form element styling.\n * Values are set in the configuration file.\n */\n\n\n%form-element-hover {\n  &:hover, &:focus, &:active {\n    text-decoration: none;\n    border-color: $ui_hover_border_color;\n    box-shadow: inset 0 0 0 $ui_border_width $ui_hover_border_color;\n    @include transition(); } }\n\n%form-element-base {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  vertical-align: baseline;\n  box-sizing: border-box;\n  zoom: 1;\n  font-family: $ui_font_family;\n  padding: rv($ui_padding);\n  @include font-size($ui_font_size);\n  line-height: $blh;\n  font-weight: $normalfw;\n  vertical-align: middle;\n  border-style: solid;\n  border-width: $ui_border_width;\n  border-color: $ui_border_color;\n  border-radius: $ui_border_radius;\n  background-clip: border-box;\n  box-shadow: none;\n  outline: none;\n  @include transition();\n  max-width: 100%;\n\n  @extend %form-element-hover; }\n\n%text-element-base {\n  @extend %form-element-base;\n  appearance: none;\n\n  @if $ui_element_height != auto {\n    height: $ui_element_height;\n    min-height: $ui_element_height; } }\n\n%textarea-base {\n  box-sizing: border-box;\n  max-width: 100%;\n  padding: rv($ui_padding);\n  box-shadow: none;\n  border-style: solid;\n  border-width: $ui_border_width;\n  border-color: $ui_border_color;\n  border-radius: $ui_border_radius;\n  background-clip: border-box;\n  @include transition(); }\n\n%select-element-base {\n  @extend %text-element-base; }\n\n/*\n * A note on element height\n * Button base styling includes a logic intended to enforce consistent height between form inputs and buttons.\n * This is particularly important for inline forms, where select, input and submit buttons must be consistent.\n *\n * The best approach is to enforce a $ui_element_height, and ensure that it's larger than the default button height.\n * The fallback is a logic which takes into account ui elements border widths in the instances where text input\n * has borders and buttons do not.\n *\n */\n\n$btnPadding: ms($btn_padding,$blh,$scale);\n$btnBorderAllowance: $ui_border_width;\n\n%form-description {\n  @include font-size(-1);\n  color: $dark_neutral; }\n\n%btn-base {\n  @extend %form-element-base;\n\n  @if $ui_element_height != auto {\n    height: $ui_element_height;\n    flex-shrink: 0; }\n\n  @if $buttonfontsize != $ui_font_size {\n    @include font-size($buttonfontsize); }\n\n  @if $btn_border_width != $ui_border_width {\n    border-width: $btn_border_width;\n    padding: calc(#{$btnPadding} + #{$btnBorderAllowance}) $btnPadding; }\n  @else {\n    @if $btn_padding != $ui_padding {\n      rv($ui_padding) {} } }\n\n  @if $btn_border_color != $ui_border_color {\n    border-color: $btn_border_color; }\n\n  @if $btn_border_radius != $ui_border_radius {\n    border-radius: $btn_border_radius; }\n\n  justify-content: center;\n  text-align: center;\n  background-clip: border-box;\n  cursor: pointer;\n  min-width: $btn_min_width;\n  width: $btn_width;\n  max-width: $btn_max_width;\n  @include transition();\n  white-space: nowrap;\n\n  &:hover, &:focus, &:active {\n    text-decoration: none;\n    box-shadow: none;\n    @include transition(all,-5); } }\n\n%btn {\n  @extend %btn-base;\n  color: $btn_color;\n  background-color: $btn_bg_color;\n  border: $btn_border_width solid $btn_border_color;\n  &:hover, &:focus, &:active {\n    background-color: $btn_hover_bg_color;\n    color: $btn_hover_color;\n    border: $btn_border_width solid $btn_hover_border_color; } }\n\n%btn-submit {\n  @extend %btn-base;\n  color: $btn_submit_color;\n  background-color: $btn_submit_bg_color;\n  border: $btn_border_width solid $btn_submit_border_color;\n  &:hover, &:focus, &:active {\n    background-color: $btn_submit_hover_bg_color;\n    color: $btn_submit_hover_color;\n    border: $btn_border_width solid $btn_submit_hover_border_color; } }\n\n%btn-reset {\n  @extend %btn-base;\n  color: $dark_neutral;\n  background-color: $white;\n  border: $btn_border_width solid $dark_neutral;\n  &:hover, &:focus, &:active {\n    background-color: $dark_neutral;\n    color: $btn_hover_color; } }\n\n%btn-inverted {\n  @extend %btn-base;\n  color: $btn_bg_color;\n  background-color: $btn_color;\n  border: $btn_border_width solid $btn_bg_color;\n  &:hover, &:focus, &:active {\n    background-color: $btn_hover_color;\n    color: $btn_color; } }\n\n%btn-outline {\n  @extend %btn-base;\n  color: $outline_btn_color;\n  background-color: transparent;\n\n  @if $btn_border_width == 0 {\n    border: 1px solid $outline_btn_color; }\n  @else {\n    border: $btn_border_width solid $outline_btn_color; }\n\n  &:hover, &:focus, &:active {\n    color: $outline_btn_hover_color;\n    background-color: transparent;\n    @if $btn_border_width == 0 {\n      border: 1px solid $outline_btn_hover_color; }\n    @else {\n      border: $btn_border_width solid $outline_btn_hover_color; } } }\n\n%btn-ghost {\n  @extend %btn-base;\n  color: $white;\n  background-color: transparent;\n\n  @if $btn_border_width == 0 {\n    border: 1px solid $white; }\n  @else {\n    border: $btn_border_width solid $white; }\n\n  &:hover, &:focus, &:active {\n    @if $btn_border_width == 0 {\n      border: 1px solid $white; }\n    @else {\n      border: $btn_border_width solid $white; }\n    background-color: darken($btn_hover_color,5%);\n    color: $white; } }\n\n\n// An alias\n\n%button {\n  @extend %btn; }\n\n\n\n","/**\n * @file\n * UI Configuration. A standardized approach to defining buttons and other ui elements.\n *\n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n\n$ui_element_height: 60px;  // Standard height for single-line input, select and button elements.\n$ui_border_radius: 2px;\n$ui_border_width: 2px;\n$ui_border_color: $light_neutral;\n$ui_hover_border_color: $link_colour;\n$ui_font_family: $basefont;\n$ui_color: $darker_neutral;  // Default for icons and text-based interactive components.\n\n$ui_padding: -4;  // Size fact\n$ui_font_size: 0; // Size factor\n\n$border_radius: $ui_border_radius;\n\n// Buttons\n\n$buttonfontsize: 1;\n\n$btn_padding: $ui_padding;\n$btn_border_width: $ui_border_width;\n$btn_border_radius: $ui_border_radius;\n$btn_min_width: 200px;\n$btn_width: 280px;\n$btn_max_width: 375px;\n\n$btn_color: $cta;\n$btn_bg_color: $white;\n$btn_border_color: $cta;\n$btn_hover_color: $black;\n$btn_hover_border_color: $black;\n$btn_hover_bg_color: $white;\n\n$btn_submit_color: $white;\n$btn_submit_bg_color: $impact;\n$btn_submit_border_color: $impact;\n$btn_submit_hover_color: $white;\n$btn_submit_hover_border_color: mix($impact,$black,10%);\n$btn_submit_hover_bg_color: mix($impact,$black,10%);\n\n$outline_btn_color: $mid_neutral;\n$outline_btn_hover_color: $ui_hover_border_color;\n","/*\n * Defines a common set of rules for form elements.\n * Definitions are set in a_core/10_Definitions/_forms.sass\n */\n\n// .trigger is a Drupal class for contextual menus.\n\ninput {\n  &[type='button'] {\n    @extend %btn; }\n\n  &[type='submit'] {\n    @extend %btn-submit;\n    margin-top: rv(0); }\n\n  &[type='reset'] {\n    @extend %btn-reset; }\n\n  &[type='text'] {\n    @extend %text-element-base; }\n\n  &[type='search'] {\n    @extend %text-element-base; }\n\n  &[type='url'], &[type='date'], &[type='email'], &[type='password'] {\n    @extend %text-element-base; } }\n\nselect {\n  @extend %select-element-base; }\n\ntextarea {\n  @extend %textarea-base;\n\n  @extend %form-element-hover; }\n\n.form-item {\n  margin-top: rv(0);\n\n  &:first-child {\n    margin-top: 0; } }\n\n","/**\n *  @file _animation_root_variables.sass\n *  @category 50_animation\n *  @component standardized_animation\n *  @description Adds CSS variables to be passed to javascript */\n\n$rootvar: ':root'; // See https://github.com/sass/libsass/issues/2511\n\n$heartbeat_seconds: ceil(strip_unit($heartbeat)) * 1000;\n$slide_transition_seconds: ceil(strip_unit($slide_transition)) * 1000;\n\n#{$rootvar} {\n  --animation--heartbeat: #{$heartbeat_seconds};\n  --animation--slidetransition: #{$slide_transition_seconds}; }\n","figure {\n  margin: 0;\n  box-sizing: border-box; }\n\nfigcaption {\n  display: block;\n  box-sizing: border-box;\n  font-weight: normal;\n  @include font-size(0);\n  font-style: italic;\n  color: $black; }\n","// Important when using SVG Symbols\n// The core svg fill should be set to “inherit”, which should apply to all predefined svg <symbols>.\n// This allows symbols referenced through a <use> tag to inherit colour from their context,\n// putting them into the scope of the css. Otherwise they are simply references and exist outside\n// the DOM.\n\n\nsvg {\n  width: inherit;\n  height: inherit;\n  fill: inherit;\n\n  // Standard Adobe Illustrator SVG classes\n\n  .cls-1, .cls-2, .cls-3 {\n    fill: inherit; } }\n","/**\n * @file _fluid_type_component.sass\n *\n */\n\n\n@if $universal_fluid_type == true {\n  $basetypesize: 1em;\n\n  body {\n    @include fluid_type($min_font_size,$max_font_size,$min_viewwidth,$max_viewwidth); } }\n\n.fluid-type {\n  @include fluid_type($min_font_size,$max_font_size,$min_viewwidth,$max_viewwidth); }\n","/* Scales typography for any screen size. h/t https://www.madebymike.com.au/writing/precise-control-responsive-typography/\n  and Indrek Paas https://www.sassmeister.com/gist/7f22e44ace49b5124eec\n\n  @var\n  $min_size: Minimum font size in em or rem\n  $max_size: Maximum font size in em or rem\n  $min_viewport_width: Sets the lower bound breakpoint to stop scaling. E.g. map-get($breakpoints,'med') */\n\n$default_min_width: map-get($breakpoints,$stack_breakpoint);\n\n@mixin fluid-type($min_value: $min_font_size, $max_value: $max_font_size,$min-vw: $min_viewwidth, $max-vw: $max_viewwidth, $properties: font-size) {\n\n  // Assume that passed integers are relative font size values\n\n  @if is_integer($min_value) and unit($min_value) == '' {\n    $min_value: font-value($min_value); }\n\n  @if is_integer($max_value) and unit($max_value) == '' {\n    $max_value: font-value($max_value); }\n\n  $break: false;\n\n  // Capture compatibility errors\n\n  @if comparable($min_value,$max_value) == false {\n    $minfunit: unit($min_value);\n    $maxfunit: unit($max_value);\n    @warn \"Fluid type: Minimum and maximum font size units are not compatible (#{$minfunit} and #{$maxfunit}\";\n    $break: true; }\n\n  @if comparable($min_viewwidth,$max_viewwidth) == false {\n    $minvunit: unit($min_viewwidth);\n    $maxvunit: unit($max_viewwidth);\n    @warn \"Fluid type: Minimum and maximum view units are not compatible (#{$minvunit} and #{$maxvunit}\";\n    $break: true; }\n\n  @if $break == false {\n\n    @each $property in $properties {\n      #{$property}: $min_value; }\n\n    @media (min-width: $min-vw) {\n      $sizefactor: strip-unit($max_value - $min_value);\n      $viewfactor: strip-unit($max-vw - $min-vw);\n\n      @each $property in $properties {\n        #{$property}: calc(#{$min_value} + #{$sizefactor} * (100vw - #{$min-vw}) / #{$viewfactor}); } }\n\n    @media (min-width: $max-vw) {\n      @each $property in $properties {\n        #{$property}: $max_value; } }\n\n    // Container elements must be set to an em value to properly cascade fluid type\n\n    address, article, aside, section, ul {\n      font-size: 1em;\n      line-height: inherit; } } }\n"]}